#Configure other microservices to register with Eureka
spring:
  application:
    name: service-registry
    config:
      import: optional:configserver:http://localhost:8888
    compatibility-verifier:
      enabled: false



#server.port specifies the port where Eureka server will be running.
#eureka.client.registerWithEureka and eureka.client.fetchRegistry are set to false since this is a server and does not register itself with another Eureka instance.
#eureka.server.enableSelfPreservation is set to false for demonstration purposes; adjust according to your needs in production.

#Spring Boot Actuator is included for health checks. Access health endpoints using /actuator/health on each microservice. Eureka will periodically check the health status of registered instances.