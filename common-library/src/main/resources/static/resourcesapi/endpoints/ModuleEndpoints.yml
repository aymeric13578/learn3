paths:
  /modules:
    get:
      tags:
        - Module Management
      summary: List all modules
      description: Retrieve a list of modules
      operationId: listModules
      parameters:
        - $ref: '../parameters/query/offset.yml'
        - $ref: '../parameters/query/limit.yml'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '../models/ModuleListResponse.yml#/ModuleListResponse'
        '400':
          description: Bad request error
          content:
            application/json:
              schema:
                $ref: '../responses/ErrorResultResponse.yml#/ErrorResultResponse'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '../responses/UnauthorizedResponse.yml#/UnauthorizedResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '../responses/ErrorResultResponse.yml#/ErrorResultResponse'
        '429':
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '../responses/TooManyRequestsResponse.yml#/TooManyRequestsResponse'
        default:
          description: Unexpected error
    post:
      tags:
        - Module Management
      summary: Create a new module
      description: Register a new module
      operationId: createModule
      requestBody:
        description: Module data to create
        content:
          application/json:
            schema:
              $ref: '../models/ModulePostData.yml#/ModulePostData'
        required: true
      responses:
        '201':
          description: Module created successfully
          content:
            application/json:
              schema:
                $ref: '../models/ModuleResponse.yml#/ModuleResponse'
        '400':
          description: Bad request error
          content:
            application/json:
              schema:
                $ref: '../responses/ErrorResultResponse.yml#/ErrorResultResponse'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '../responses/UnauthorizedResponse.yml#/UnauthorizedResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '../responses/ErrorResultResponse.yml#/ErrorResultResponse'
        '429':
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '../responses/TooManyRequestsResponse.yml#/TooManyRequestsResponse'
        default:
          description: Unexpected error
  /modules/{moduleId}:
    get:
      tags:
        - Module Management
      summary: Get module by ID
      description: Retrieve a module by its ID
      operationId: getModuleById
      parameters:
        - $ref: '../parameters/path/module-id.yml'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '../models/ModuleResponse.yml#/ModuleResponse'
        '400':
          description: Bad request error
          content:
            application/json:
              schema:
                $ref: '../responses/ErrorResultResponse.yml#/ErrorResultResponse'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '../responses/UnauthorizedResponse.yml#/UnauthorizedResponse'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '../responses/ErrorResultResponse.yml#/ErrorResultResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '../responses/ErrorResultResponse.yml#/ErrorResultResponse'
        '429':
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '../responses/TooManyRequestsResponse.yml#/TooManyRequestsResponse'
        default:
          description: Unexpected error
    put:
      tags:
        - Module Management
      summary: Update an existing module
      description: Update module data
      operationId: updateModule
      parameters:
        - $ref: '../parameters/path/module-id.yml'
      requestBody:
        description: Module data to be updated
        content:
          application/json:
            schema:
              $ref: '../models/ModulePostData.yml#/ModulePostData'
        required: true
      responses:
        '200':
          description: Module updated successfully
          content:
            application/json:
              schema:
                $ref: '../models/ModuleResponse.yml#/ModuleResponse'
        '400':
          description: Bad request error
          content:
            application/json:
              schema:
                $ref: '../responses/ErrorResultResponse.yml#/ErrorResultResponse'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '../responses/UnauthorizedResponse.yml#/UnauthorizedResponse'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '../responses/ErrorResultResponse.yml#/ErrorResultResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '../responses/ErrorResultResponse.yml#/ErrorResultResponse'
        '429':
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '../responses/TooManyRequestsResponse.yml#/TooManyRequestsResponse'
        default:
          description: Unexpected error
    delete:
      tags:
        - Module Management
      summary: Delete a module
      description: Remove a module by its ID
      operationId: deleteModule
      parameters:
        - $ref: '../parameters/path/module-id.yml'
      responses:
        '200':
          description: Module deleted successfully
          content:
            application/json:
              schema:
                $ref: '../responses/MessageResultResponse.yml#/MessageResultResponse'
        '400':
          description: Bad request error
          content:
            application/json:
              schema:
                $ref: '../responses/ErrorResultResponse.yml#/ErrorResultResponse'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '../responses/UnauthorizedResponse.yml#/UnauthorizedResponse'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '../responses/ErrorResultResponse.yml#/ErrorResultResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '../responses/ErrorResultResponse.yml#/ErrorResultResponse'
        '429':
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '../responses/TooManyRequestsResponse.yml#/TooManyRequestsResponse'
        default:
          description: Unexpected error
  /courses/{courseId}/modules:
    post:
      tags:
        - Module Management
      summary: Add a new module to a course
      description: Add a new module to a specific course.
      parameters:
        - name: courseId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Module details (title, content, order, etc.)
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
                order:
                  type: integer
                # Add other properties as needed
        required: true
      responses:
        '201':
          description: Module added successfully
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Course not found
        '406':
          description: Not Acceptable
        '429':
          description: Too many requests

    get:
      tags:
        - Module Management
      summary: Retrieve all modules for a course
      description: Retrieve a list of all modules for a specific course.
      parameters:
        - name: courseId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of modules
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CourseModule'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Course not found
        '406':
          description: Not Acceptable
        '429':
          description: Too many requests