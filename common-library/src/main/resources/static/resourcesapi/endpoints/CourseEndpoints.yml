paths:
  /courses:
    get:
      tags:
        - Course Management
      summary: List all courses
      description: Retrieve a list of courses
      operationId: listCourses
      parameters:
        - $ref: '../parameters/query/offset.yml'
        - $ref: '../parameters/query/limit.yml'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '../models/CourseListResponse.yml#/CourseListResponse'
        '400':
          description: Bad request error
          content:
            application/json:
              schema:
                $ref: '../responses/ErrorResultResponse.yml#/ErrorResultResponse'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '../responses/UnauthorizedResponse.yml#/UnauthorizedResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '../responses/ErrorResultResponse.yml#/ErrorResultResponse'
        '429':
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '../responses/TooManyRequestsResponse.yml#/TooManyRequestsResponse'
        default:
          description: Unexpected error
    post:
      tags:
        - Course Management
      summary: Create a new course
      description: Register a new course
      operationId: createCourse
      requestBody:
        description: Course data to create
        content:
          application/json:
            schema:
              $ref: '../models/CoursePostData.yml#/CoursePostData'
        required: true
      responses:
        '201':
          description: Course created successfully
          content:
            application/json:
              schema:
                $ref: '../models/CourseResponse.yml#/CourseResponse'
        '400':
          description: Bad request error
          content:
            application/json:
              schema:
                $ref: '../responses/ErrorResultResponse.yml#/ErrorResultResponse'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '../responses/UnauthorizedResponse.yml#/UnauthorizedResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '../responses/ErrorResultResponse.yml#/ErrorResultResponse'
        '429':
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '../responses/TooManyRequestsResponse.yml#/TooManyRequestsResponse'
        default:
          description: Unexpected error
  /courses/{courseId}:
    get:
      tags:
        - Course Management
      summary: Get course by ID
      description: Retrieve a course by its ID
      operationId: getCourseById
      parameters:
        - $ref: '../parameters/path/course-id.yml'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '../models/CourseResponse.yml#/CourseResponse'
        '400':
          description: Bad request error
          content:
            application/json:
              schema:
                $ref: '../responses/ErrorResultResponse.yml#/ErrorResultResponse'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '../responses/UnauthorizedResponse.yml#/UnauthorizedResponse'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '../responses/ErrorResultResponse.yml#/ErrorResultResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '../responses/ErrorResultResponse.yml#/ErrorResultResponse'
        '429':
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '../responses/TooManyRequestsResponse.yml#/TooManyRequestsResponse'
        default:
          description: Unexpected error
    put:
      tags:
        - Course Management
      summary: Update an existing course
      description: Update course data
      operationId: updateCourse
      parameters:
        - $ref: '../parameters/path/course-id.yml'
      requestBody:
        description: Course data to be updated
        content:
          application/json:
            schema:
              $ref: '../models/CoursePostData.yml#/CoursePostData'
        required: true
      responses:
        '200':
          description: Course updated successfully
          content:
            application/json:
              schema:
                $ref: '../models/CourseResponse.yml#/CourseResponse'
        '400':
          description: Bad request error
          content:
            application/json:
              schema:
                $ref: '../responses/ErrorResultResponse.yml#/ErrorResultResponse'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '../responses/UnauthorizedResponse.yml#/UnauthorizedResponse'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '../responses/ErrorResultResponse.yml#/ErrorResultResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '../responses/ErrorResultResponse.yml#/ErrorResultResponse'
        '429':
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '../responses/TooManyRequestsResponse.yml#/TooManyRequestsResponse'
        default:
          description: Unexpected error
    delete:
      tags:
        - Course Management
      summary: Delete a course
      description: Remove a course by its ID
      operationId: deleteCourse
      parameters:
        - $ref: '../parameters/path/course-id.yml'
      responses:
        '200':
          description: Course deleted successfully
          content:
            application/json:
              schema:
                $ref: '../responses/MessageResultResponse.yml#/MessageResultResponse'
        '400':
          description: Bad request error
          content:
            application/json:
              schema:
                $ref: '../responses/ErrorResultResponse.yml#/ErrorResultResponse'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '../responses/UnauthorizedResponse.yml#/UnauthorizedResponse'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '../responses/ErrorResultResponse.yml#/ErrorResultResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '../responses/ErrorResultResponse.yml#/ErrorResultResponse'
        '429':
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '../responses/TooManyRequestsResponse.yml#/TooManyRequestsResponse'
        default:
          description: Unexpected error
  /courses/{courseId}/publish:
    post:
      tags:
        - Course Management
      summary: Publish a course
      description: Publish a course to make it available to students.
      parameters:
        - name: courseId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Course published successfully
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Course not found
        '406':
          description: Not Acceptable
        '429':
          description: Too many requests

    /courses/{courseId}/unpublish:
      post:
        tags:
          - Course Management
        summary: Unpublish a course
        description: Unpublish a course to make it unavailable.
        parameters:
          - name: courseId
            in: path
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Course unpublished successfully
          '400':
            description: Bad request
          '401':
            description: Unauthorized
          '404':
            description: Course not found
          '406':
            description: Not Acceptable
          '429':
            description: Too many requests

    /search/courses:
      get:
        tags:
          - Course Management
        summary: Search courses
        description: Search courses based on various criteria.
        parameters:
          - name: title
            in: query
            schema:
              type: string
          - name: description
            in: query
            schema:
              type: string
          - name: instructor
            in: query
            schema:
              type: string
        responses:
          '200':
            description: Search results
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Course'
          '400':
            description: Bad request
          '401':
            description: Unauthorized
          '406':
            description: Not Acceptable
          '429':
            description: Too many requests

    /filter/courses:
      get:
        tags:
          - Course Management
        summary: Filter courses
        description: Filter courses based on criteria like price range, creation date, etc.
        parameters:
          - name: minPrice
            in: query
            schema:
              type: number
              format: float
          - name: maxPrice
            in: query
            schema:
              type: number
              format: float
          - name: startDate
            in: query
            schema:
              type: string
              format: date
          - name: endDate
            in: query
            schema:
              type: string
              format: date
        responses:
          '200':
            description: Filtered courses
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Course'
          '400':
            description: Bad request
          '401':
            description: Unauthorized
          '406':
            description: Not Acceptable
          '429':
            description: Too many requests

    /courses/{courseId}/enroll:
      post:
        tags:
          - Course Management
        summary: Enroll in a course
        description: Enroll a user in a specific course.
        parameters:
          - name: courseId
            in: path
            required: true
            schema:
              type: string
        requestBody:
          description: User details for enrollment
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: string
                  # Add other properties as needed
          required: true
        responses:
          '200':
            description: User enrolled successfully
          '400':
            description: Bad request
          '401':
            description: Unauthorized
          '404':
            description: Course not found
          '406':
            description: Not Acceptable
          '429':
            description: Too many requests

      /courses/{courseId}/progress:
        post:
          tags:
            - Course Management
          summary: Track user progress
          description: Update a user's progress in a specific course.
          parameters:
            - name: courseId
              in: path
              required: true
              schema:
                type: string
          requestBody:
            description: Progress details
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    userId:
                      type: string
                    progress:
                      type: integer
                    status:
                      type: string
                    # Add other properties as needed
            required: true
          responses:
            '200':
              description: Progress updated successfully
            '400':
              description: Bad request
            '401':
              description: Unauthorized
            '404':
              description: Course or user not found
            '406':
              description: Not Acceptable
            '429':
              description: Too many requests

      /courses/{courseId}/progress/{userId}:
        get:
          tags:
            - Course Management
          summary: Get user progress
          description: Retrieve a user's progress in a specific course.
          parameters:
            - name: courseId
              in: path
              required: true
              schema:
                type: string
            - name: userId
              in: path
              required: true
              schema:
                type: string
          responses:
            '200':
              description: User progress
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      userId:
                        type: string
                      progress:
                        type: integer
                      status:
                        type: string
                    # Add other properties as needed
            '400':
              description: Bad request
            '401':
              description: Unauthorized
            '404':
              description: Course or user not found
            '406':
              description: Not Acceptable
            '429':
              description: Too many requests

      /courses/{courseId}/reviews:
        post:
          tags:
            - Course Management
          summary: Submit a course review
          description: Submit a review for a specific course.
          parameters:
            - name: courseId
              in: path
              required: true
              schema:
                type: string
          requestBody:
            description: Review details
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    userId:
                      type: string
                    rating:
                      type: integer
                    comment:
                      type: string
                    # Add other properties as needed
            required: true
          responses:
            '201':
              description: Review submitted successfully
            '400':
              description: Bad request
            '401':
              description: Unauthorized
            '404':
              description: Course not found
            '406':
              description: Not Acceptable
            '429':
              description: Too many requests

      /courses/{courseId}/reviews/{reviewId}:
        get:
          tags:
            - Course Management
          summary: Get course reviews
          description: Retrieve all reviews for a specific course.
          parameters:
            - name: courseId
              in: path
              required: true
              schema:
                type: string
            - name: reviewId
              in: path
              required: true
              schema:
                type: string
          responses:
            '200':
              description: Course reviews
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      $ref: '#/components/schemas/CourseReview'
            '400':
              description: Bad request
            '401':
              description: Unauthorized
            '404':
              description: Course or review not found
            '406':
              description: Not Acceptable
            '429':
              description: Too many requests
      /courses/{course_id}/feedbacks:
        get:
          tags:
            - Course Management
          summary: Retrieve feedbacks for a specific course with pagination
          parameters:
            - name: course_id
              in: path
              required: true
              schema:
                type: string
            - name: offset
              in: query
              schema:
                type: integer
              description: The number of items to skip before starting to collect the result set
            - name: limit
              in: query
              schema:
                type: integer
              description: The numbers of items to return
          responses:
            '200':
              description: Successful operation
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      $ref: '../models/Feedback.yml#/Feedback'
            '400':
              description: Bad request error
              content:
                application/json:
                  schema:
                    $ref: '../responses/ErrorResultResponse.yml#/ErrorResultResponse'
            '401':
              description: Unauthorized request
              content:
                application/json:
                  schema:
                    $ref: '../responses/UnauthorizedResponse.yml#/UnauthorizedResponse'
            '406':
              description: Not Acceptable
              content:
                application/json:
                  schema:
                    $ref: '../responses/ErrorResultResponse.yml#/ErrorResultResponse'
            '429':
              description: Too many requests
              content:
                application/json:
                  schema:
                    $ref: '../responses/TooManyRequestsResponse.yml#/TooManyRequestsResponse'
            default:
              description: Unexpected error
      /courses/{course_id}/waitlist:
        post:
          tags:
            - Course Management
          summary: Add a user to the waitlist for a course directly
          parameters:
            - name: course_id
              in: path
              required: true
              schema:
                type: string
          requestBody:
            description: User waitlist data
            content:
              application/json:
                schema:
                  $ref: '../models/WaitlistPostData.yml#/WaitlistPostData'
            required: true
          responses:
            '201':
              description: User added to waitlist successfully
              content:
                application/json:
                  schema:
                    $ref: '../models/WaitlistResponse.yml#/WaitlistResponse'
            '400':
              description: Bad request error
              content:
                application/json:
                  schema:
                    $ref: '../responses/ErrorResultResponse.yml#/ErrorResultResponse'
            '401':
              description: Unauthorized request
              content:
                application/json:
                  schema:
                    $ref: '../responses/UnauthorizedResponse.yml#/UnauthorizedResponse'
            '406':
              description: Not Acceptable
              content:
                application/json:
                  schema:
                    $ref: '../responses/ErrorResultResponse.yml#/ErrorResultResponse'
            '429':
              description: Too many requests
              content:
                application/json:
                  schema:
                    $ref: '../responses/TooManyRequestsResponse.yml#/TooManyRequestsResponse'
            default:
              description: Unexpected error
      /courses/{course_id}/modules:
        get:
          tags:
            - Course Management
          summary: Retrieve modules for a specific course with pagination
          parameters:
            - name: course_id
              in: path
              required: true
              schema:
                type: string
            - name: offset
              in: query
              schema:
                type: integer
              description: The number of items to skip before starting to collect the result set
            - name: limit
              in: query
              schema:
                type: integer
              description: The numbers of items to return
          responses:
            '200':
              description: Successful operation
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      $ref: '../models/Module.yml#/Module'
            '400':
              description: Bad request error
              content:
                application/json:
                  schema:
                    $ref: '../responses/ErrorResultResponse.yml#/ErrorResultResponse'
            '401':
              description: Unauthorized request
              content:
                application/json:
                  schema:
                    $ref: '../responses/UnauthorizedResponse.yml#/UnauthorizedResponse'
            '406':
              description: Not Acceptable
              content:
                application/json:
                  schema:
                    $ref: '../responses/ErrorResultResponse.yml#/ErrorResultResponse'
            '429':
              description: Too many requests
              content:
                application/json:
                  schema:
                    $ref: '../responses/TooManyRequestsResponse.yml#/TooManyRequestsResponse'
            default:
              description: Unexpected error